@mixin sprite-background($name) {
    background-image: sprite-url($sprites);
    background-position: sprite-position($sprites, $name);
    background-repeat: no-repeat;
    display: block;
    height: image-height(sprite-file($sprites, $name));
    text-indent: -9999em;
    width: image-width(sprite-file($sprites, $name));
}

@mixin retina-sprite-background($name) {
    background-image: sprite-url($retina_sprites);
    background-position: nth(sprite-position($retina_sprites, $name), 1) / 2 nth(sprite-position($retina_sprites, $name), 2) / 2;
    background-repeat: no-repeat;
    background-size: image-width(sprite-path($retina_sprites)) / 2;
    display: block;
    height: image-height(sprite-file($retina_sprites, $name)) / 2;
    text-indent: -9999em;
    width: image-width(sprite-file($retina_sprites, $name)) / 2;
}

@mixin font-face($family, $style, $weight, $filename) {
    @font-face {
        font-family: $family;
        font-style:  $style;
        font-weight: $weight;
        src: url('../font/' + $filename + '.eot');
        src: url('../font/' + $filename + '.eot?#iefix') format('embedded-opentype'),
             url('../font/' + $filename + '.woff') format('woff'),
             url('../font/' + $filename + '.ttf') format('truetype'),
             url('../font/' + $filename + '.svg#' + $family +'') format('svg');
    }
}

@function em($px, $base: $base-font-size) {
    @return ($px / $base) * 1em;
}

@mixin clearfix() {
    &:after, &:before {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}